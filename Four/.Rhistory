df <- data.frame(
y = c(1, 2, 3, 4, 5),
x1 = c(1, 2, 3, 4, 5),
x2 = c(5, 4, 3, 2, 1)
)
# 进行线性回归
model <- linreg(y ~ x1 + x2, data = df)
source("~/WorkSpace/git/R_group3/Four/R/example.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
df <- data.frame(
y = c(1, 2, 3, 4, 5),
x1 = c(1, 2, 3, 4, 5),
x2 = c(5, 4, 3, 2, 1)
)
linreg(y ~ x1 + x2, data = df)
df <- data.frame(
y = c(1, 2, 3, 4, 5),
x1 = c(1, 2, 3, 4, 5),
x2 = c(5, 4, 3, 2, 1)
)
# 进行线性回归
model <- linreg(y ~ x1 + x2, data = df)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
df <- data.frame(
y = c(1, 2, 3, 4, 5),
x1 = c(1, 2, 3, 4, 5),
x2 = c(5, 4, 3, 2, 1)
)
# 进行线性回归
model <- linreg(y ~ x1 + x2, data = df)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
df <- data.frame(
y = c(1, 2, 3, 4, 5),
x1 = c(1, 2, 3, 4, 5),
x2 = c(5, 4, 3, 2, 1)
)
linreg(y ~ x1 + x2, data = df)
> df <- data.frame(
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
df <- data.frame(
y = c(1, 2, 3, 4, 5),
x1 = c(1, 2, 3, 4, 5),
x2 = c(5, 4, 3, 2, 1)
)
linreg(y ~ x1 + x2, data = df)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
rm(list = c("linreg"))
devtools::load_all(".")
rm(list = ls())
library(Four)
devtools::document()
use_testthat()
library(devtool)
library(devtools)
use_testthat()
x <- 1:100
class(x) <- "my_numeric"
x
x <- 1
class(x) <- "my_numeric"
x
list(name="character",age="numeric")
#' Linear Regression Model
#'
#' This function performs linear regression using ordinary least squares
#' and returns an object of class `linreg`.
#'
#' @param formula A formula object specifying the regression model.
#' @param data A data frame containing the variables in the model.
#' @return An object of class `linreg` containing the regression results.
#' @export
linreg <- function(formula, data) {
# Check if the data is a data frame
if (!is.data.frame(data)) {
stop("data must be a data frame")
}
# Create model matrix and extract dependent variable
X <- model.matrix(formula, data)
y <- data[[all.vars(formula)[1]]]
# Calculate regression coefficients
beta <- solve(t(X) %*% X) %*% t(X) %*% y
y_hat <- X %*% beta
residuals <- y - y_hat
# Calculate degrees of freedom and residual variance
n <- nrow(data)
p <- length(beta)
df_residual <- n - p
sigma_squared <- sum(residuals^2) / df_residual
# Calculate variance of coefficients and t-values
var_beta <- sigma_squared * solve(t(X) %*% X)
se_beta <- sqrt(diag(var_beta))
t_values <- beta / se_beta
# Calculate p-values
p_values <- 2 * pt(-abs(t_values), df = df_residual)
# Create a list to store results
result <- list(
coefficients = beta,
fitted_values = y_hat,
residuals = residuals,
df_residual = df_residual,
variance = sigma_squared,
t_values = t_values,
p_values = p_values,
formula = formula,
data = data
)
# Set class for the result
class(result) <- "linreg"
return(result)
}
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
devtools::document()
rm(list = c("linreg"))
load_all()
devtools::document()
source("~/WorkSpace/git/R_group3/Four/R/linregnew.R")
rm(list = c("linreg"))
rm(list = c("linregnew"))
devtools::document()
source("~/WorkSpace/git/R_group3/Four/R/linregnew.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
is.formula
is.formula(2)
# 创建示例数据
set.seed(123)
x <- rnorm(100)
y <- 2 * x + rnorm(100)
# 拟合线性模型
model <- lm(y ~ x)
# 查看模型摘要
summary(model)
# 创建示例数据框
data <- data.frame(
y = c(1, 2, 3, 4, 5),
x1 = c(2, 3, 4, 5, 6),
x2 = c(5, 4, 3, 2, 1)
)
# 拟合多元线性模型
model_multi <- lm(y ~ x1 + x2, data = data)
# 查看模型摘要
summary(model_multi)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
> data <- data.frame(
> data <- data.frame(
data <- data.frame(
+     y = c(1, 2, 3, 4, 5),
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
data(iris)
mod_object <- lm(Petal.Length~Species, data = iris)
print(mod_object)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
data(iris)
mod_object <- lm(Petal.Length~Species, data = iris)
print(mod_object)
View(iris)
View(mod_object)
data(iris)
mod_object <- lm(Petal.Length~Species, data = iris)
print(mod_object)
View(iris)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
print.linreg(mod_object)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
print.linreg(mod_object)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
print.linreg(mod_object)
print.linreg(mod_object)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
print.linreg(mod_object)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
print.linreg(mod_object)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
print.linreg(mod_object)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
linreg(formula = Petal.Length ~ Species, data = iris)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
linreg(formula = Petal.Length ~ Species, data = iris)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
linreg(formula = Petal.Length ~ Species, data = iris)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
linreg(formula = Petal.Length ~ Species, data = iris)
linreg(formula = Petal.Length ~ Species, data = iris)
View(iris)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
linreg(formula = Petal.Length ~ Species, data = iris)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
linreg(formula = Petal.Length ~ Species, data = iris)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
linreg(formula = Petal.Length ~ Species, data = iris)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
linreg(formula = Petal.Length ~ Species, data = iris)
devtools::document()
devtools::document()
devtools::build()
devtools::reload()
devtools::document()  # 更新文档
devtools::install()   # 安装包
rm(list = c("linreg"))
devtools::document()  # 更新文档
devtools::install()   # 安装包
library(Four)  # 替换为你的包名
rm(list = ls())
load("your_file.RData")
getwd()  # 查看当前工作目录
setwd("/path/to/your/directory")  # 更改工作目录
devtools::load_all(".")
rm(list = ls())
libarary(four)
library(Four)
devtools::document()
install.packages("stats")
install.packages("Four")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
install.packages("stats")
devtools::document()
devtools::build()
devtools::reload()
rm(list = c("linreg"))
devtools::document()
devtools::build()
devtools::reload()
library(stats)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
devtools::document()
rm(list = c("linreg"))
devtools::document()
?resid
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
rm(list = c("linreg"))
devtools::document()
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
rm(list = c("linreg"))
devtools::document()
devtools::build()
devtools::reload()
devtools::document()
devtools::build()
devtools::reload()
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
devtools::load_all(".")
rm(list = c("linreg"))
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
usethis::use_vignette("Introduction to Four")
usethis::use_vignette("Introduction_to_Four")
> data(iris)
data(iris)
linreg_mod <- linreg(Petal.Length ~ Sepal.Width + Sepal.Length, data = iris)
data(iris)
linreg(Petal.Length ~ Sepal.Width + Sepal.Length, data = iris)
library(Four)
data(iris)
linreg(Petal.Length ~ Sepal.Width + Sepal.Length, data = iris)
summary(linreg)
# 确保加载必要的包
library(your_package)  # 替换为实际包名
# 确保加载必要的包
library(Four)  # 替换为实际包名
# 加载数据
data(iris)
# 进行线性回归
linreg_mod <- linreg(Petal.Length ~ Sepal.Width + Sepal.Length, data = iris)
summary(linreg_mod)
plot(linreg_mod)
library(ggplot2)
plot(linreg_mod)
library(ggplot2)
plot(linreg_mod)
library(Four)
data("iris")
linreg_mod <- linreg(Petal.Length ~ Sepal.Width + Sepal.Length, data = iris)
head(linreg_mod$actual_values)
linreg_mod$actual_values
linreg_mod
head(linreg_mod)
library(Four)
data("iris")
linreg_mod <- linreg(Petal.Length ~ Sepal.Width + Sepal.Length, data = iris)
head(linreg_mod$actual_values)
resid(linreg_mod)
pred(linreg_mod)
coef(linreg_mod)
summary(linreg_mod)
plot(linreg_mod)
library(ggplot2)
library(gridExtra)
plot(linreg_mod)
print(p1)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
library(Four)
plot(linreg_mod)
devtools::load_all(".")
rm(list = c("linreg"))
devtools::load_all(".")
library(Four)
plot(linreg_mod)
plot(linreg_mod)
library(Four)
plot(linreg_mod)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
plot(linreg_mod)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
plot(linreg_mod)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
plot(linreg_mod)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
plot(linreg_mod)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
plot(linreg_mod)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
plot(linreg_mod)
source("~/WorkSpace/git/R_group3/Four/R/linreg.R")
plot(linreg_mod)
devtools::load_all(".")
rm(list = c("linreg"))
devtools::load_all(".")
